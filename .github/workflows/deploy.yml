name: CI/CD Pipeline

on:
  push:
    branches:
      - main   # Trigger only when main branch gets updated (after PR merge)
  workflow_dispatch:   # Allow manual runs from GitHub Actions tab

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod   # automatically pick version from go.mod

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./... -v

      - name: Build Lambda binary (x86_64)
        run: |
          mkdir -p build
          # Compile for Lambda (Linux, x86_64) with lambda.norpc
          GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -tags lambda.norpc -o build/bootstrap ./cmd/bot
          cd build && zip lambda.zip bootstrap

      - name: Upload Lambda artifact
        uses: actions/upload-artifact@v4
        with:
          name: lambda-package
          path: build/lambda.zip

  deploy:
    name: Deploy to AWS Lambda
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Lambda package
        uses: actions/download-artifact@v4
        with:
          name: lambda-package
          path: build/

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Deploy to Lambda
        run: |
          aws lambda update-function-code \
            --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
            --zip-file fileb://build/lambda.zip










# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main   # Trigger only when main branch gets updated (after PR merge)
#   workflow_dispatch:   # Allow manual runs from GitHub Actions tab

# jobs:
#   build:
#     name: Build & Test
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Set up Go
#         uses: actions/setup-go@v5
#         with:
#           go-version-file: go.mod   # automatically pick version from go.mod

#       - name: Cache Go modules
#         uses: actions/cache@v4
#         with:
#           path: |
#             ~/go/pkg/mod
#             ~/.cache/go-build
#           key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
#           restore-keys: |
#             ${{ runner.os }}-go-

#       - name: Install dependencies
#         run: go mod tidy

#       - name: Run tests
#         run: go test ./... -v

#       - name: Build Lambda binary
#         run: |
#           mkdir -p build
#           GOOS=linux GOARCH=amd64 go build -o build/bootstrap ./cmd/bot
#           cd build && zip lambda.zip bootstrap

#       - name: Upload artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: lambda-package
#           path: build/lambda.zip

#   deploy:
#     name: Deploy to AWS Lambda
#     runs-on: ubuntu-latest
#     needs: build
#     if: github.ref == 'refs/heads/main'

#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v4

#       - name: Download Lambda package
#         uses: actions/download-artifact@v4
#         with:
#           name: lambda-package
#           path: build/

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v4
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ${{ secrets.AWS_REGION }}

#       - name: Deploy to Lambda
#         run: |
#           aws lambda update-function-code \
#             --function-name ${{ secrets.LAMBDA_FUNCTION_NAME }} \
#             --zip-file fileb://build/lambda.zip
